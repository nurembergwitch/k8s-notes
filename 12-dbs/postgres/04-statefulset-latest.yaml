apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: postgres
spec:
  serviceName: postgres-headless-svc # necessary for a statefulset
  replicas: 3
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      securityContext:
        fsGroup: 1001
      containers:
        - name: postgres
          lifecycle:
            preStop:
              exec:
                command:
                  - /pre-stop.sh
          image: bitnami/postgresql-repmgr:15.4.0-debian-11-r0
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
              #name: postgresql 
              protocol: TCP
          securityContext:
            runAsUser: 1001
          # Postgresql vars
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            # PostgreSQL configuration
            - name: POSTGRESQL_VOLUME_DIR
              value: "/bitnami/postgresql"
            - name: PGDATA
              value: "/bitnami/postgresql/data15"
            # - name: POSTGRESQL_USER
            #   value: "postgres"
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets # move into kustomize later
                  key: postgresql-password
            - name: POSTGRESQL_DATABASE
              value: "postgres"
            - name: POSTGRESQL_LOG_HOSTNAME
              value: "true"
            - name: POSTGRESQL_LOG_CONNECTIONS
              value: "true"
            - name: POSTGRESQL_LOG_DISCONNECTIONS
              value: "true"
            - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
              value: "off"
            - name: POSTGRESQL_CLIENT_MIN_MESSAGES
              value: "error"
            - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
              value: "pgaudit, repmgr"
            - name: POSTGRESQL_ENABLE_TLS
              value: "no"
            # Repmgr vars
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: REPMGR_UPGRADE_EXTENSION
              value: "no"
            - name: REPMGR_PGHBA_TRUST_ALL
              value: "no"
            - name: REPMGR_MOUNTED_CONF_DIR
              value: "/bitnami/repmgr/conf"
            - name: REPMGR_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: REPMGR_PARTNER_NODES # a comma-separated list of all postgres server addresses in the cluster, ncluding the primary serverâ€™s address
              value: postgres-0.postgres-headless-svc.$(REPMGR_NAMESPACE).svc.cluster.local,postgres-1.postgres-headless-svc.$(REPMGR_NAMESPACE).svc.cluster.local,postgres-2.postgres-headless-svc.$(REPMGR_NAMESPACE).svc.cluster.local # only 3 here bc replicas set to 3 
            - name: REPMGR_PRIMARY_HOST
              value: "postgres-0.postgres-headless-svc.$(REPMGR_NAMESPACE).svc.cluster.local"
            - name: REPMGR_NODE_NAME
              value: "$(MY_POD_NAME)"
            - name: REPMGR_NODE_NETWORK_NAME
              value: "$(MY_POD_NAME).postgres-headless-svc.$(REPMGR_NAMESPACE).svc.cluster.local"
            - name: REPMGR_LOG_LEVEL
              value: "NOTICE"
            - name: REPMGR_CONNECT_TIMEOUT
              value: "5"
            - name: REPMGR_RECONNECT_ATTEMPTS
              value: "3"
            - name: REPMGR_RECONNECT_INTERVAL
              value: "5"
            - name: REPMGR_USERNAME
              value: "repmgr"
            - name: REPMGR_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: repmgr-password
            - name: REPMGR_DATABASE
              value: "repmgr"
          #######
          volumeMounts:
            - name: data
              mountPath: /bitnami/postgresql # POSTGRESQL_VOLUME_DIR var
            - name: script
              mountPath: /pre-stop.sh
              subPath: pre-stop.sh
            - name: fidlar
              mountPath: /fidlar.sql
              subPath: fidlar.sql
      volumes:
        - name: script
          configMap:
            name: postgres-conf
            defaultMode: 0755
        - name: fidlar
          configMap:
            name: fidlarsql
            defaultMode: 0755
  volumeClaimTemplates: # used by statefulsets to create volumes
    - metadata:
        name: data
        namespace: postgres
      spec:
        accessModes:
          - "ReadWriteOnce"
        #storageClassName: "postgres"
        resources:
          requests:
            storage: "1Gi"
